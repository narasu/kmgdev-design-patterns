@startuml

skin rose

title KMGDEV - Design Patterns

interface IState {
  +void Enter()
  +void Update()
  +void FixedUpdate()
  +void Exit()
}

interface IStateOwner {
}

interface IPoolable {
}


class ObjectPool {
  +void AddObject(IPoolable _obj)
}

class Enemy {
}

class Player {
}


class FiniteStateMachine {
  -IStateOwner owner
  -List<IState> states
}

abstract AbstractState {
  +void Enter()
  +void Update(float _delta)
  +void Exit()
}

class AttackState
class WeaponSearchState
class EvadeState

IStateOwner <-right- FiniteStateMachine
IStateOwner <|.down. Enemy

IState <-up- FiniteStateMachine
IState <|.down. AbstractState

AbstractState <|-down- AttackState
AbstractState <|-down- WeaponSearchState
AbstractState <|-down- EvadeState

Enemy *-up- FiniteStateMachine


@enduml